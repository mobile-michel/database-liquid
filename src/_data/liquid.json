[
    {
        "category": "filters",
        "categoryDescription": "Filters are used to modify output.",
        "subcategory": [
            {
                "subcategoryName": "math",
                "subcategoryDescription": "Perform mathematical operation on numbers.",
                "elements": [
                    {
                        "elementName": "plus",
                        "elementDescription": "Adds a number to another number.",
                        "version": "1.9.1"
                    },
                    {
                        "elementName": "minus",
                        "elementDescription": "Subtracts a number from another number.",
                        "version": "1.9.1"
                    },
                    {
                        "elementName": "modulo",
                        "elementDescription": "Returns the remainder of a division operation.",
                        "version": "1.9.1"
                    },
                    {
                        "elementName": "times",
                        "elementDescription": "Multiplies a number by another number.",
                        "version": "1.9.1"
                    },
                    {
                        "elementName": "floor",
                        "elementDescription": "Rounds the input down to the nearest whole number",
                        "version": "1.9.1"
                    },
                    {
                        "elementName": "ceil",
                        "elementDescription": "Rounds the input up to the nearest whole number",
                        "version": "1.9.1"
                    },
                    {
                        "elementName": "round",
                        "elementDescription": "Rounds a number to the nearest integer or, if a number is passed as an argument, to that number of decimal places",
                        "version": "1.9.1"
                    },
                    {
                        "elementName": "divided_by",
                        "elementDescription": "Divides a number by another number.",
                        "version": "1.9.1"
                    },
                    {
                        "elementName": "abs",
                        "elementDescription": "Returns the absolute value of a number",
                        "version": "1.9.1"
                    },
                    {
                        "elementName": "at_least",
                        "elementDescription": "Limits a number to a minimum value",
                        "version": "8.4.0"
                    },
                    {
                        "elementName": "at_most",
                        "elementDescription": "Limits a number to a maximum value",
                        "version": "8.4.0"
                    }
                ]
            },
            {
                "subcategoryName": "string",
                "subcategoryDescription": "Perform string operations.",
                "elements": [
                    {
                        "elementName": "append",
                        "elementDescription": "append string to input.",
                        "liquidjsUrl": "filters/append.html",
                        "version": "1.9.1"
                    },
                    {
                        "elementName": "prepend",
                        "elementDescription": "prepend string to input.",
                        "liquidjsUrl": "filters/prepend.html",
                        "version": "1.9.1"
                    },
                    {
                        "elementName": "capitalized",
                        "elementDescription": "capitalize first letter of input.",
                        "liquidjsUrl": "filters/capitalized.html",
                        "version": "1.9.1"
                    },
                    {
                        "elementName": "upcase",
                        "elementDescription": "convert input to uppercase.",
                        "liquidjsUrl": "filters/upcase.html",
                        "version": "1.9.1"
                    },
                    {
                        "elementName": "downcase",
                        "elementDescription": "convert input to lowercase.",
                        "liquidjsUrl": "filters/downcase.html",
                        "version": "1.9.1"
                    },
                    {
                        "elementName": "strip",
                        "elementDescription": "remove whitespace from input.",
                        "liquidjsUrl": "filters/strip.html",
                        "version": "1.9.1"
                    },
                    {
                        "elementName": "lstrip",
                        "elementDescription": "Removes all whitespace (tabs, spaces, and newlines) from the left side of a string.",
                        "liquidjsUrl": "filters/lstrip.html",
                        "version": "1.9.1"
                    },
                    {
                        "elementName": "rstrip",
                        "elementDescription": "Removes all whitespace (tabs, spaces, and newlines) from the right side of a string.",
                        "liquidjsUrl": "filters/rstrip.html",
                        "version": "1.9.1"
                    },
                    {
                        "elementName": "strip_newlines",
                        "elementDescription": "Removes any newline characters (line breaks) from a string.",
                        "liquidjsUrl": "filters/strip_newlines.html",
                        "version": "1.9.1"
                    },
                    {
                        "elementName": "split",
                        "elementDescription": "Divides a string into an array using the argument as a separator.",
                        "liquidjsUrl": "filters/split.html",
                        "version": "1.9.1"
                    },
                    {
                        "elementName": "replace",
                        "elementDescription": "Replaces every occurrence of the first argument in a string with the second argument.",
                        "liquidjsUrl": "filters/replace.html",
                        "version": "1.9.1"
                    },
                    {
                        "elementName": "replace_first",
                        "elementDescription": "Replaces only the first occurrence of the first argument in a string with the second argument.",
                        "liquidjsUrl": "filters/replace_first.html",
                        "version": "1.9.1"
                    },
                    {
                        "elementName": "last",
                        "elementDescription": "Replaces only the last occurrence of the first argument in a string with the second argument.",
                        "liquidjsUrl": "filters/replace_last.html",
                        "version": "10.2.0"
                    },
                    {
                        "elementName": "remove",
                        "elementDescription": "Removes every occurrence of the specified substring from a string.",
                        "liquidjsUrl": "filters/remove.html",
                        "version": "1.9.1"
                    },
                    {
                        "elementName": "remove_first",
                        "elementDescription": "Removes only the first occurrence of the specified substring from a string.",
                        "liquidjsUrl": "filters/remove_first.html",
                        "version": "1.9.1"
                    },
                    {
                        "elementName": "remove_last",
                        "elementDescription": "Removes only the last occurrence of the specified substring from a string.",
                        "liquidjsUrl": "filters/remove_last.html",
                        "version": "10.2.0"
                    },
                    {
                        "elementName": "truncate",
                        "elementDescription": "Shortens a string down to the number of characters passed as an argument.",
                        "liquidjsUrl": "filters/truncate.html",
                        "version": "1.9.1"
                    },
                    {
                        "elementName": "truncatewords",
                        "elementDescription": "Shortens a string down to the number of words passed as an argument.",
                        "liquidjsUrl": "filters/truncatewords.html",
                        "version": "1.9.1"
                    },
                    {
                        "elementName": "normalize_whitespace",
                        "elementDescription": "Replace any occurrence of whitespace with a single space.",
                        "liquidjsUrl": "filters/normalize_whitespace.html",
                        "version": "10.13.0"
                    },
                    {
                        "elementName": "number_of_words",
                        "elementDescription": "Count the number of words in some text.",
                        "liquidjsUrl": "filters/number_of_words.html",
                        "version": "10.13.0"
                    },
                    {
                        "elementName": "array_to_sentence_string",
                        "elementDescription": "Convert an array into a sentence, useful for listing tags.",
                        "liquidjsUrl": "filters/array_to_sentence_string.html",
                        "version": "10.13.0"
                    }
                ]
            },
            {
                "subcategoryName": "array",
                "subcategoryDescription": "Perform array operations.",
                "elements": [
                    {
                        "elementName": "slice",
                        "elementDescription": "Returns a substring of 1 character beginning at the index specified by the first argument.",
                        "liquidjsUrl": "filters/slice.html",
                        "version": "1.9.1"
                    },
                    {
                        "elementName": "map",
                        "elementDescription": "Creates an array of values by extracting the values of a named property from another object.",
                        "liquidjsUrl": "filters/map.html",
                        "version": "1.9.1"
                    },
                    {
                        "elementName": "sort",
                        "elementDescription": "Sorts items in an array in case-sensitive order.",
                        "liquidjsUrl": "filters/sort.html",
                        "version": "1.9.1"
                    },
                    {
                        "elementName": "sort_natural",
                        "elementDescription": "Sorts items in an array in case-insensitive order.",
                        "liquidjsUrl": "filters/sort_natural.html",
                        "version": "8.4.0"
                    },
                    {
                        "elementName": "uniq",
                        "elementDescription": "remove duplicate elements from array.",
                        "liquidjsUrl": "filters/uniq.html",
                        "version": "1.9.1"
                    },
                    {
                        "elementName": "where",
                        "elementDescription": "Creates an array including only the objects with a given property value, or any truthy value by default.",
                        "liquidjsUrl": "filters/where.html",
                        "version": "8.1.0"
                    },
                    {
                        "elementName": "where_exp",
                        "elementDescription": "Select all the objects in an array where the expression is true.",
                        "liquidjsUrl": "filters/where_exp.html",
                        "version": "10.12.0"
                    },
                    {
                        "elementName": "group_by",
                        "elementDescription": "Group an array’s items by a given property.",
                        "liquidjsUrl": "filters/group_by.html",
                        "version": "10.11.0"
                    },
                    {
                        "elementName": "group_by_exp",
                        "elementDescription": "Group an array’s items using a Liquid expression.",
                        "liquidjsUrl": "filters/group_by_exp.html",
                        "version": "10.11.0"
                    },
                    {
                        "elementName": "find",
                        "elementDescription": "Return the first object in an array for which the queried attribute has the given value or return nil if no item in the array satisfies the given criteria.",
                        "liquidjsUrl": "filters/find.html",
                        "version": "10.11.0"
                    },
                    {
                        "elementName": "find_exp",
                        "elementDescription": "Return the first object in an array for which the given expression evaluates to true or return nil if no item in the array satisfies the evaluated expression.",
                        "liquidjsUrl": "filters/find_exp.html",
                        "version": "10.11.0"
                    },
                    {
                        "elementName": "first",
                        "elementDescription": "Returns the first item of an array.",
                        "liquidjsUrl": "filters/first.html",
                        "version": "1.9.1"
                    },
                    {
                        "elementName": "last",
                        "elementDescription": "Returns the last item of an array.",
                        "liquidjsUrl": "filters/last.html",
                        "version": "1.9.1"
                    },
                    {
                        "elementName": "join",
                        "elementDescription": "Combines the items in an array into a single string using the argument as a separator.",
                        "liquidjsUrl": "filters/join.html",
                        "version": "1.9.1"
                    },
                    {
                        "elementName": "reverse",
                        "elementDescription": "Reverses the order of the items in an array.",
                        "liquidjsUrl": "filters/reverse.html",
                        "version": "1.9.1"
                    },
                    {
                        "elementName": "concat",
                        "elementDescription": "Concatenates (joins together) multiple arrays, the resulting array contains all the items from the input arrays.",
                        "liquidjsUrl": "filters/concat.html",
                        "version": "2.0.0"
                    },
                    {
                        "elementName": "compact",
                        "elementDescription": "Removes any nil values from an array.",
                        "liquidjsUrl": "filters/compact.html",
                        "version": "9.22.0"
                    },
                    {
                        "elementName": "size",
                        "elementDescription": "Returns the number of characters in a string or the number of items in an array.",
                        "liquidjsUrl": "filters/size.html",
                        "version": "1.9.1"
                    },
                    {
                        "elementName": "push",
                        "elementDescription": "Push an element into array. It’s NON-DESTRUCTIVE, i.e. it does not mutate the array, but rather make a copy and mutate that.",
                        "liquidjsUrl": "filters/push.html",
                        "version": "10.8.0"
                    },
                    {
                        "elementName": "pop",
                        "elementDescription": "Pop an element from the array. It’s NON-DESTRUCTIVE, i.e. it does not mutate the array, but rather make a copy and mutate that.",
                        "liquidjsUrl": "filters/pop.html",
                        "version": "10.11.0"
                    },
                    {
                        "elementName": "shift",
                        "elementDescription": "Shift an element from the array. It’s NON-DESTRUCTIVE, i.e. it does not mutate the array, but rather make a copy and mutate that.",
                        "liquidjsUrl": "filters/shift.html",
                        "version": "10.11.0"
                    },
                    {
                        "elementName": "unshift",
                        "elementDescription": "Unshift an element to the front of the array. It’s NON-DESTRUCTIVE, i.e. it does not mutate the array, but rather make a copy and mutate that.",
                        "liquidjsUrl": "filters/unshift.html",
                        "version": "10.11.0"
                    }
                ]
            },
            {
                "subcategoryName": "date-filter",
                "subcategoryDescription": "Perform date operations",
                "elements": [
                    {
                        "elementName": "date",
                        "elementDescription": "Used to convert a timestamp into the specified format.",
                        "version": "1.9.1"
                    },
                    {
                        "elementName": "date_to_xmlschema",
                        "elementDescription": "Convert a Date into XML Schema (ISO 8601) format.",
                        "version": "10.13.0"
                    },
                    {
                        "elementName": "date_to_rfc822",
                        "elementDescription": "Convert a Date into the RFC-822 format used for RSS feeds.",
                        "version": "10.13.0"
                    },
                    {
                        "elementName": "date_to_string",
                        "elementDescription": "Convert a date to short format.",
                        "version": "10.13.0"
                    },
                    {
                        "elementName": "date_to_long_string",
                        "elementDescription": "Convert a date to long format.",
                        "version": "10.13.0"
                    }
                ]
            },
            {
                "subcategoryName": "misc",
                "subcategoryDescription": "Miscellaneous filters.",
                "elements": [
                    {
                        "elementName": "default",
                        "elementDescription": "Allows you to specify a fallback in case a value doesn’t exist.",
                        "version": "1.9.1"
                    },
                    {
                        "elementName": "json",
                        "elementDescription": "Convert values to string via JSON.stringify(), for debug purpose.",
                        "version": "9.10.0"
                    },
                    {
                        "elementName": "jsonify",
                        "elementDescription": "Convert values to string via JSON.stringify(), for debug purpose, like json filter.",
                        "version": "10.13.0"
                    },
                    {
                        "elementName": "inspect",
                        "elementDescription": "Similar with json, but inspect allows cyclic structure.",
                        "version": "10.13.0"
                    },
                    {
                        "elementName": "raw",
                        "elementDescription": "Directly returns the value of the variable.",
                        "version": "9.37.0"
                    },
                    {
                        "elementName": "to_integer",
                        "elementDescription": "Convert values to number.",
                        "version": "10.13.0"
                    }
                ]
            },
            {
                "subcategoryName": "html",
                "subcategoryDescription": "URL filters.",
                "elements":[
                    {
                        "elementName": "escape",
                        "elementDescription": "Escapes a string by replacing HTML special characters with escape sequences.",
                        "version": "1.9.1"
                    },
                    {
                        "elementName": "escape_once",
                        "elementDescription": "Escapes a string without changing existing escaped entities.",
                        "version": "1.9.1"
                    },
                    {
                        "elementName": "url_encode",
                        "elementDescription": "Converts any URL-unsafe characters in a string into percent-encoded characters.",
                        "version": "1.9.1"
                    },
                    {
                        "elementName": "url_decode",
                        "elementDescription": "Decodes a string that has been encoded as a URL.",
                        "version": "6.1.0"
                    },
                    {
                        "elementName": "strip_html",
                        "elementDescription": "Removes any HTML tags from a string.",
                        "version": "1.9.1"
                    },
                    {
                        "elementName": "newline_to_br",
                        "elementDescription": "Replaces every newline in a string with an HTML line break.",
                        "version": "1.9.1"
                    },
                    {
                        "elementName": "xml_escape",
                        "elementDescription": "Escape some text for use in XML.",
                        "version": "10.13.0"
                    },
                    {
                        "elementName": "cgi_escape",
                        "elementDescription": "CGI escape a string for use in a URL.",
                        "version": "10.13.0"
                    },
                    {
                        "elementName": "uri_escape",
                        "elementDescription": "Percent encodes any special characters in a URI.",
                        "version": "10.13.0"
                    }
                ]
            }
        ]
    },
    {
        "category": "tags",
        "categoryDescription": "Create the logic and control flow for templates.",
        "subcategory":[
            {
                "subcategoryName": "Iteration",
                "subcategoryDescription": "Iterate over a collection.",
                "elements": [
                    {
                        "elementName": "for",
                        "elementDescription": "iteration tags run blocks of code repeatedly.",
                        "liquidjsUrl": "tags/for.html"
                    },
                    {
                        "elementName": "cycle",
                        "elementDescription": "loops through a group of strings and prints them in the order that they were passed as arguments.",
                        "liquidjsUrl": "tags/cycle.html"
                    },
                    {
                        "elementName": "tablerow",
                        "elementDescription": "generates an HTML table.",
                        "liquidjsUrl": "tags/tablerow.html"
                    }
                ]
            },
            {
                "subcategoryName": "Control Flow",
                "subcategoryDescription": "Control the execution branch of template rendering.",
                "elements": [
                    {
                        "elementName": "if",
                        "elementDescription": "executes a block of code only if a certain condition is true.",
                        "liquidjsUrl": "tags/if.html"
                    },
                    {
                        "elementName": "unless",
                        "elementDescription": "executes a block of code only if a certain condition is not met.",
                        "liquidjsUrl": "tags/unless.html"
                    },
                    {
                        "elementName": "elsif",
                        "elementDescription": "adds more conditions within an if or unless block.",
                        "liquidjsUrl": "tags/elsif.html"
                    },
                    {
                        "elementName": "else",
                        "elementDescription": "adds more conditions within an if or unless block.",
                        "liquidjsUrl": "tags/else.html"
                    },
                    {
                        "elementName": "case",
                        "elementDescription": "creates a switch statement to compare a variable with different values.",
                        "liquidjsUrl": "tags/case.html"
                    },
                    {
                        "elementName": "when",
                        "elementDescription": "creates a switch statement to compare a variable with different values.",
                        "liquidjsUrl": "tags/when.html"
                    }
                ]
            },
            {
                "subcategoryName": "Variable",
                "subcategoryDescription": "Define and alter variables.",
                "elements": [
                    {
                        "elementName": "assign",
                        "elementDescription": "creates a new variable.",
                        "liquidjsUrl": "tags/assign.html"
                    },
                    {
                        "elementName": "increment",
                        "elementDescription": "creates a new number variable, and increases its value by one every time it is called.",
                        "liquidjsUrl": "tags/increment.html"
                    },
                    {
                        "elementName": "decrement",
                        "elementDescription": "creates a new number variable, and decreases its value by one every time it is called.",
                        "liquidjsUrl": "tags/decrement.html"
                    },
                    {
                        "elementName": "capture",
                        "elementDescription": "captures the string inside of the opening and closing tags and assigns it to a variable.",
                        "liquidjsUrl": "tags/capture.html"
                    },
                    {
                        "elementName": "echo",
                        "elementDescription": "outputs an expression in the rendered HTML.",
                        "liquidjsUrl": "tags/echo.html"
                    }
                ]
            },
            {
                "subcategoryName": "File",
                "subcategoryDescription": "Include another template or extend a layout template.",
                "elements": [
                    {
                        "elementName": "render",
                        "elementDescription": "render a partial template from partials directory."
                    },
                    {
                        "elementName": "include",
                        "elementDescription": "*deprecated*, use render instead."
                    },
                    {
                        "elementName": "layout",
                        "elementDescription": "introduce a layout template for the current template to render in."
                    }
                ]
            },
            {
                "subcategoryName": "Language",
                "subcategoryDescription": "Temporarily disable LiquidJS syntax.",
                "elements": [
                    {
                        "elementName": "# (inline comment)",
                        "elementDescription": "add comments to a Liquid template using an inline tag."
                    },
                    {
                        "elementName": "raw",
                        "elementDescription": "raw temporarily disables tag processing."
                    },
                    {
                        "elementName": "comment",
                        "elementDescription": "allows you to leave un-rendered code inside a Liquid template."
                    },
                    {
                        "elementName": "liquid",
                        "elementDescription": "encloses multiple tags within one set of delimiters, to allow writing Liquid logic more concisely."
                    }
                ]
            }
        ]
    },
    {
        "category": "objects",
        "categoryDescription": "Contain the content that Liquid displays on a page.",
        "subcategory":[
            {
                "subcategoryName": "string",
                "subcategoryDescription": "sequences of characters wrapped in single or double quotes.",
                "example": "Hello World"
            },
            {
                "subcategoryName": "number",
                "subcategoryDescription": "include floats and integers.",
                "example": "100"
            },
            {
                "subcategoryName": "boolean",
                "subcategoryDescription": "booleans are either true or false.",
                "example": "true"
            },
            {
                "subcategoryName": "nil",
                "subcategoryDescription": "special empty value that is returned when Liquid code has no results."
            },
            {
                "subcategoryName": "array",
                "subcategoryDescription": "hold lists of variables of any type.",
                "example": "['Tobi', 'Bob', 'Laura']"
            },
            {
                "subcategoryName": "emptyDrop",
                "subcategoryDescription": "returned if you try to access a deleted object."
            }
        ]
    }
]